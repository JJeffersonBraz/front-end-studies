/*
*    Cada item dentro do grid container pode ocupar divisões pré estabelecidas de acordo com
*    propriedades aplicadas a eles.
*/

.cartao__item {
    font-size: 1,2rem;

    grid-column: span 3;
    grid-row: span 3;
}
/*     
*    O "Span" vai agrupar funções que o item irá ocupar.
*    Fazendo uma analogia ao excel, é como se estivéssemos mesclando 3 células.
*/

.cartao__item {
    font-size: 1,2rem;

    grid-column: 1;
    grid-row: 3;
}
/*     
*    Podemos definir em qual divisão do conteúdo o item irá começar/ocupar.
*    No exemplo acima, o conteúdo irá ocupar a coluna 1 da terceira linha.
*/

.cartao__item {
    font-size: 1,2rem;
    
    /*grid-row: 3; */
    /*grid-row: span 2; */
    grid-row: 1 / span 2;
}
/*
*    Suponha que o item deva iniciar na linha 1 e ocupar 2 linhas, ao invés de declarar 2
*    "grid-row", podemos declar os dois atributos ao mesmo tempo, separando com uma barra "/".
*/

/* 
*    Se o grid container estiver muitas divisões de conteúdo, o processo de inserir o início do
*    container que o item irá ocupar pelos grid-row e grid-column fica muito trabalhoso e passível
*    de erro. Nesses casos recomenda-se utilizar grid-area pois facilita na manutenção futura do código.
*/